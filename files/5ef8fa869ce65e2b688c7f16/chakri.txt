@RequestMapping("/admin/product/productform")
   public ModelAndView getForm(Model model) {
   model.addAttribute("product",new Product());
   return new ModelAndView("productform","categories",categoryservice.getcategories());
   }
   
  @RequestMapping("/admin/product/addproduct")
  public String saveproduct(@Valid @ModelAttribute(value="product") Product product,BindingResult result,Model model){
	  if(result.hasErrors()){
		  model.addAttribute("categories",categoryservice.getcategories());
		  return "productform";
	  }

	Product produp = productservice.saveproduct(product);
	  
	  return "redirect:/all/product/getallproducts";
  }
  @RequestMapping("/all/product/getallproducts")
  public String getallproducts(Model model){
	  List<Product> products = productservice.getallproducts();
	  model.addAttribute("products",products);
	  return "/productlist";   
	}
 @RequestMapping("/all/product/viewproduct/{id}") 
  public String viewproduct(@PathVariable int id,Model model){
	 Product product = productservice.getProductById(id);
	 model.addAttribute("product",product);
	  return "viewproduct";
  }
 @RequestMapping("/admin/product/deleteproduct/{id}")
  public String deleteProduct(@PathVariable int id){
	  productservice.deleteProduct(id);
	  return "redirect:/all/product/getallproducts";
  }
 
 @RequestMapping("/admin/product/editform/{id}")
 public String editProductform(@PathVariable int id,Model model){
	 Product product = productservice.getProductById(id);
	 System.out.println(product.getId());
	 model.addAttribute("product1",product);
	 model.addAttribute("categories",categoryservice.getcategories());
	 System.out.println("running editform");
	 return "editform";
 }
 
 @RequestMapping("/admin/product/editProduct")
 public String editProductDetails( @ModelAttribute("product1") Product product,BindingResult result){
		
		productservice.updateProduct(product);
		return "redirect:/all/product/getallproducts";
	}

}


